{"ast":null,"code":"var _jsxFileName = \"H:\\\\PROJECT\\\\REACT\\\\sec17\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httperror, setError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const resp = await fetch('https://react14-2f161-default-rtdb.firebaseio.com/meals');\n\n      if (!resp.ok) {\n        throw new Error('something went wrong');\n      }\n\n      const respData = await resp.json();\n      const loadedMeals = [];\n\n      for (const key in respData) {\n        loadedMeals.push({\n          id: key,\n          name: respData[key].name,\n          description: respData[key].description,\n          price: respData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this));\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: mealsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httperror) {\n    return;\n  }\n};\n\n_s(AvailableMeals, \"WsKuBPioq280517koMiiHzDVDwA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["H:/PROJECT/REACT/sec17/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httperror","setError","fetchMeals","resp","fetch","ok","Error","respData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsList","map","meal","mealsError"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,QAAZ,IAAwBP,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,YAAY;AAC7B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,yDAAD,CAAxB;;AAEA,UAAI,CAACD,IAAI,CAACE,EAAV,EAAc;AACZ,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,YAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAvB;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,QAAlB,EAA4B;AAC1BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,QAAQ,CAACG,GAAD,CAAR,CAAcG,IAFL;AAGfC,UAAAA,WAAW,EAAEP,QAAQ,CAACG,GAAD,CAAR,CAAcI,WAHZ;AAIfC,UAAAA,KAAK,EAAER,QAAQ,CAACG,GAAD,CAAR,CAAcK;AAJN,SAAjB;AAMD;;AAEDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,KArBD;;AAuBAG,IAAAA,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAW;AAC5BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACgB,KAAK,CAACC,OAAP,CAAR;AACD,KAHD;AAOD,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,MAAIpB,SAAJ,EAAe;AACb,wBAAO;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AACD,QAAMqB,SAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACT,EAFX;AAGE,IAAA,IAAI,EAAES,IAAI,CAACR,IAHb;AAIE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAJpB;AAKE,IAAA,KAAK,EAAEO,IAAI,CAACN;AALd,KACOM,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;;AASA,MAAId,SAAJ,EAAe;AAEb,wBACE;AAAS,MAAA,SAAS,EAAEN,OAAO,CAAC8B,UAA5B;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE;AAAA,oBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,MAAInB,SAAJ,EAAe;AACb;AACD;AACF,CAnED;;GAAML,c;;KAAAA,c;AAqEN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n\nconst AvailableMeals = () => {\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httperror, setError] = useState();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const resp = await fetch('https://react14-2f161-default-rtdb.firebaseio.com/meals');\n\n      if (!resp.ok) {\n        throw new Error('something went wrong');\n      }\n\n      const respData = await resp.json();\n      const loadedMeals = [];\n      for (const key in respData) {\n        loadedMeals.push({\n          id: key,\n          name: respData[key].name,\n          description: respData[key].description,\n          price: respData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n\n\n\n  }, []);\n\n  if (isLoading) {\n    return <section>\n      <p> Loading...</p>\n    </section >\n  }\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n  if (isLoading) {\n\n    return (\n      <section className={classes.mealsError}>\n        <Card>\n          <ul>{mealsList}</ul>\n        </Card>\n      </section>\n    );\n  }\n\n  if (httperror) {\n    return\n  }\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}